{"version":3,"file":"component---src-templates-post-template-js-7b967328637e3f96dd67.js","mappings":"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","sources":["webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://gatsby-starter-glass/./src/templates/post-template.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\n\r\nconst toKebabCase = (str) => {\r\n  return str\r\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    .map((x) => x.toLowerCase())\r\n    .join('-');\r\n};\r\n\r\nconst Tags = ({ tags }) => {\r\n  return (\r\n    <div>\r\n      {tags &&\r\n        tags.map((tag) => {\r\n          return (\r\n            <Tag key={tag}>\r\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\r\n            </Tag>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nconst Tag = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    z-index: 2;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(255, 255, 255, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n`;\r\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import React, { useEffect, useState, Suspense, lazy } from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Layout from '../components/layout';\r\nimport Tags from '../components/tags';\r\n// import Ads from '../components/ads';\r\n// import StaticAds from '../components/static-ads'\r\nconst StaticAds = lazy(() => import('../components/static-ads'));\r\nconst Ads = lazy(() => import('../components/ads'));\r\n\r\n\r\nexport const breakpoints = {\r\n  sm: 20,\r\n  md: 30,\r\n  lg: 45,\r\n  xl: 60\r\n};\r\n\r\nexport const mediaQueries = (key) => {\r\n  return (style) =>\r\n    `@media (min-width: ${breakpoints[key]}em) { ${style} }`;\r\n};\r\n\r\n\r\nconst PostTemplate = ({ data }) => {\r\n  const [isDisplay, setIsDisplay] = useState(true);\r\n  const { frontmatter, excerpt, html } = data.markdownRemark;\r\n  const prev = data.prev;\r\n  const next = data.next;\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setIsDisplay(false)\r\n      setIsDisplay(true)\r\n    }, 30000)\r\n  }, []);\r\n  const isSSR = typeof window === \"undefined\"\r\n  return (\r\n    <Layout\r\n      title={frontmatter.title}\r\n      description={frontmatter.description || excerpt}\r\n      socialImage={\r\n        frontmatter.social_image ? frontmatter.social_image : ''\r\n      }\r\n    >\r\n      <BodyContainer>\r\n        <LeftContainer>\r\n        {!isSSR && <Suspense fallback={<div>Ads</div>}>\r\n            {isDisplay && <StaticAds />}\r\n            {isDisplay && <StaticAds />}\r\n            {isDisplay && <Ads />}\r\n          </Suspense>}\r\n        </LeftContainer>\r\n        <MiddleContainer>\r\n          <PostWrapper>\r\n            <article>\r\n              <PostTitle>{frontmatter.title}</PostTitle>\r\n              <PostDate>{frontmatter.date}</PostDate>\r\n              <PostContent dangerouslySetInnerHTML={{ __html: html }} />\r\n            </article>\r\n            <PostPagination>\r\n              {prev && (\r\n                <div>\r\n                  <span>previous</span>\r\n                  <Link to={prev.fields.slug}> {prev.frontmatter.title}</Link>\r\n                </div>\r\n              )}\r\n\r\n              {next && (\r\n                <div>\r\n                  <span>next</span>\r\n                  <Link to={next.fields.slug}> {next.frontmatter.title}</Link>\r\n                </div>\r\n              )}\r\n            </PostPagination>\r\n            <Tags tags={frontmatter.tags} />\r\n          </PostWrapper>\r\n        </MiddleContainer>\r\n        <RightContainer>\r\n        {!isSSR && <Suspense fallback={<div>Ads</div>}>\r\n            {isDisplay && <StaticAds />}\r\n            {isDisplay && <StaticAds />}\r\n            {isDisplay && <Ads />}\r\n          </Suspense>}\r\n        </RightContainer>\r\n      </BodyContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nconst BodyContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n  display: none;\r\n  ${mediaQueries(\"md\")`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n  `};\r\n`;\r\n\r\nconst MiddleContainer = styled.div`\r\n  flex: 3;\r\n`;\r\n\r\n\r\nconst RightContainer = styled.div`\r\ndisplay: none;\r\n${mediaQueries(\"md\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`};\r\n`;\r\n\r\nconst PostWrapper = styled.div`\r\n  padding-top: var(--size-900);\r\n  padding-bottom: var(--size-900);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 70ch;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst PostTitle = styled.h1`\r\n  font-size: var(--size-700);\r\n`;\r\n\r\nconst PostDate = styled.span`\r\n  font-size: var(--size-400);\r\n  padding-top: 1rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst PostContent = styled.section`\r\n  padding-top: var(--size-800);\r\n\r\n  & > * + * {\r\n    margin-top: var(--size-300);\r\n  }\r\n\r\n  & > p + p {\r\n    margin-top: var(--size-700);\r\n  }\r\n\r\n  * + h1,\r\n  * + h2,\r\n  * + h3 {\r\n    margin-top: var(--size-900);\r\n  }\r\n\r\n  h1 {\r\n    font-size: var(--size-700);\r\n  }\r\n\r\n  h2 {\r\n    font-size: var(--size-600);\r\n  }\r\n\r\n  h3 {\r\n    font-size: var(--size-500);\r\n  }\r\n\r\n  b,\r\n  strong {\r\n    font-weight: 600;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: underline;\r\n    text-decoration-thickness: 0.125rem;\r\n  }\r\n\r\n  blockquote {\r\n    padding-left: var(--size-400);\r\n    border-left: 5px solid;\r\n    font-style: italic;\r\n  }\r\n\r\n  code {\r\n    font-family: 'Source Sans Pro', monospace;\r\n    overflow-x: auto;\r\n    white-space: pre-wrap;\r\n  }\r\n\r\n  pre {\r\n    overflow-x: auto;\r\n    white-space: pre-wrap;\r\n    max-width: 100%;\r\n    width: 90vw;\r\n    ${mediaQueries(\"md\")`\r\n      width: 100%;\r\n  `}\r\n  }\r\n`;\r\n\r\nconst PostPagination = styled.nav`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: var(--size-900);\r\n\r\n  & > * {\r\n    position: relative;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    border-radius: 8px;\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    backdrop-filter: blur(10px);\r\n    margin: 0.5rem;\r\n  }\r\n\r\n  & > *:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  & span {\r\n    text-transform: uppercase;\r\n    opacity: 0.6;\r\n    font-size: var(--size-400);\r\n    padding-bottom: var(--size-500);\r\n  }\r\n\r\n  & a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    font-size: var(--size-400);\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  & a::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const pageQuery = graphql`\r\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        tags\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        social_image\r\n      }\r\n    }\r\n\r\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\r\n      frontmatter {\r\n        title\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\r\n      frontmatter {\r\n        title\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["tags","map","tag","Tag","key","Link","to","str","match","x","toLowerCase","join","styled","_taggedTemplateLiteralLoose","strings","raw","slice","StaticAds","lazy","Ads","breakpoints","sm","md","lg","xl","mediaQueries","style","data","useState","isDisplay","setIsDisplay","markdownRemark","frontmatter","excerpt","html","prev","next","useEffect","setInterval","isSSR","window","title","description","socialImage","social_image","BodyContainer","LeftContainer","Suspense","fallback","MiddleContainer","PostWrapper","PostTitle","PostDate","date","PostContent","dangerouslySetInnerHTML","__html","PostPagination","fields","slug","RightContainer"],"sourceRoot":""}