{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/2022-10-15-golang-change-uint-size/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends 👋, Welcome To aGuideHub! ❤️ This article will help you to change your unsigned integer size like changing any uint to uint8, any uint to uint16, any…","html":"<p>Hi Friends 👋,</p>\n<p>Welcome To aGuideHub! ❤️</p>\n<p>This article will help you to change your unsigned integer size like changing any uint to uint8, any uint to uint16, any uint to uint32, any uint to uint64, and any uint to uint.</p>\n<h3>Table of content</h3>\n<h4>Convert to uint</h4>\n<ul>\n<li>uint8 to uint</li>\n<li>uint16 to uint</li>\n<li>uint32 to uint</li>\n<li>uint46 to uint</li>\n</ul>\n<h4>Convert to uint8</h4>\n<ul>\n<li>uint to uint8</li>\n<li>uint16 to uint8</li>\n<li>uint32 to uint8</li>\n<li>uint64 to uint8</li>\n</ul>\n<h4>Convert to uint16</h4>\n<ul>\n<li>uint to uint16</li>\n<li>uint8 to uint16</li>\n<li>uint32 to uint16</li>\n<li>uint64 to uint16</li>\n</ul>\n<h4>Convert to uint32</h4>\n<ul>\n<li>uint to uint32</li>\n<li>uint8 to uint32</li>\n<li>uint16 to uint32</li>\n<li>uint64 to uint32</li>\n</ul>\n<h4>Convert to uint64</h4>\n<ul>\n<li>uint to uint64</li>\n<li>uint8 to uint64</li>\n<li>uint16 to uint64</li>\n<li>uint32 to uint64</li>\n</ul>\n<h3>Important Points</h3>\n<h4>Difference between int and uint</h4>\n<p>UInt does not allow for negative numbers.</p>\n<h4>uint’s and int’s max value</h4>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">uint8  : 0 to 255 \nuint16 : 0 to 65535 \nuint32 : 0 to 4294967295 \nuint64 : 0 to 18446744073709551615 \nint8   : -128 to 127 \nint16  : -32768 to 32767 \nint32  : -2147483648 to 2147483647 \nint64  : -9223372036854775808 to 9223372036854775807</code></pre></div>\n<p>Today, I will show you how do I change the size of the uint in golang, as above mentioned I’m going to explain all the conversions between uint.</p>\n<p>Let’s start our <strong><em>Golang change size of the uint example</em></strong></p>\n<h3>Convert to uint example</h3>\n<p>To any uint ( uint8, uint16, uint32, uint64 ) to uint in golang, use the <code class=\"language-text\">uint()</code> method it will make any uint to uint.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"reflect\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i8 <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">126</span>\n  <span class=\"token keyword\">var</span> i16 <span class=\"token builtin\">uint16</span> <span class=\"token operator\">=</span> <span class=\"token number\">32766</span>\n  <span class=\"token keyword\">var</span> i32 <span class=\"token builtin\">uint32</span> <span class=\"token operator\">=</span> <span class=\"token number\">2147483646</span>\n  <span class=\"token keyword\">var</span> i64 <span class=\"token builtin\">uint64</span> <span class=\"token operator\">=</span> <span class=\"token number\">9223372036854775806</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint1 <span class=\"token operator\">:=</span> <span class=\"token function\">uint</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint1<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint2 <span class=\"token operator\">:=</span> <span class=\"token function\">uint</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint2<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint3 <span class=\"token operator\">:=</span> <span class=\"token function\">uint</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint3<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint4 <span class=\"token operator\">:=</span> <span class=\"token function\">uint</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint4<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted any uint to uint and printed it in the golang console. let’s check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">126</span> uint8\n<span class=\"token number\">32766</span> uint16\n<span class=\"token number\">2147483646</span> uint32\n<span class=\"token number\">9223372036854775806</span> uint64\n<span class=\"token number\">126</span> uint\n<span class=\"token number\">32766</span> uint\n<span class=\"token number\">2147483646</span> uint\n<span class=\"token number\">9223372036854775806</span> uint</code></pre></div>\n<iframe src=\"https://onecompiler.com/embed/go/3yjz3ye6w?hideLanguageSelection=true&hideNew=true&hideTitle=true\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" ></iframe>\n<h3>Convert to uint8 example</h3>\n<p>To any uint ( uint, uint16, uint32, uint64 ) to uint8 in golang, use the <code class=\"language-text\">uint8()</code> method it will make any uint to uint8.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"reflect\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i <span class=\"token builtin\">uint</span> <span class=\"token operator\">=</span> <span class=\"token number\">126</span>\n  <span class=\"token keyword\">var</span> i16 <span class=\"token builtin\">uint16</span> <span class=\"token operator\">=</span> <span class=\"token number\">32766</span>\n  <span class=\"token keyword\">var</span> i32 <span class=\"token builtin\">uint32</span> <span class=\"token operator\">=</span> <span class=\"token number\">2147483646</span>\n  <span class=\"token keyword\">var</span> i64 <span class=\"token builtin\">uint64</span> <span class=\"token operator\">=</span> <span class=\"token number\">9223372036854775806</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint81 <span class=\"token operator\">:=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint81<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint81<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// below conversion does not fit in uint8, I will recommend using uint for this</span>\n  uint82 <span class=\"token operator\">:=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint82<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint82<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint83 <span class=\"token operator\">:=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint83<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint83<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint84 <span class=\"token operator\">:=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint84<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint84<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted any uint to uint8 and printed it in the golang console. </p>\n<p>Some conversions will not fit in uint8, where you should use the <code class=\"language-text\">uint()</code> conversion.</p>\n<p>let’s check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">126</span> uint\n<span class=\"token number\">32766</span> uint16\n<span class=\"token number\">2147483646</span> uint32\n<span class=\"token number\">9223372036854775806</span> uint64\n<span class=\"token number\">126</span> uint8\n<span class=\"token number\">254</span> uint8\n<span class=\"token number\">254</span> uint8\n<span class=\"token number\">254</span> uint8</code></pre></div>\n<iframe src=\"https://onecompiler.com/embed/go/3yjz46834?hideLanguageSelection=true&hideNew=true&hideTitle=true\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" ></iframe>\n<h3>Convert to uint16 example</h3>\n<p>To any uint ( uint, uint8, uint32, uint64 ) to uint16 in golang, use the <code class=\"language-text\">uint16()</code> method it will make any uint to uint16.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"reflect\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i <span class=\"token builtin\">uint</span> <span class=\"token operator\">=</span> <span class=\"token number\">1264</span>\n  <span class=\"token keyword\">var</span> i8 <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">126</span>\n  <span class=\"token keyword\">var</span> i32 <span class=\"token builtin\">uint32</span> <span class=\"token operator\">=</span> <span class=\"token number\">2147483646</span>\n  <span class=\"token keyword\">var</span> i64 <span class=\"token builtin\">uint64</span> <span class=\"token operator\">=</span> <span class=\"token number\">9223372036854775806</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint161 <span class=\"token operator\">:=</span> <span class=\"token function\">uint16</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint161<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint161<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint162 <span class=\"token operator\">:=</span> <span class=\"token function\">uint16</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint162<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint162<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// below conversion does not fit in uint8, I will recommend using uint for this</span>\n\n  uint163 <span class=\"token operator\">:=</span> <span class=\"token function\">uint16</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint163<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint163<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint164 <span class=\"token operator\">:=</span> <span class=\"token function\">uint16</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint164<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint164<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted any uint to uint16 and printed it in the golang console. </p>\n<p>Some conversions will not fit in uint16, where you should use the <code class=\"language-text\">uint()</code> conversion.</p>\n<p>let’s check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Output:\n\n<span class=\"token number\">1264</span> uint\n<span class=\"token number\">126</span> uint8\n<span class=\"token number\">2147483646</span> uint32\n<span class=\"token number\">9223372036854775806</span> uint64\n<span class=\"token number\">1264</span> uint16\n<span class=\"token number\">126</span> uint16\n<span class=\"token number\">65534</span> uint16\n<span class=\"token number\">65534</span> uint16</code></pre></div>\n<iframe src=\"https://onecompiler.com/embed/go/3yjz49x68?hideLanguageSelection=true&hideNew=true&hideTitle=true\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" ></iframe>\n<h3>Convert to uint32 example</h3>\n<p>To any uint ( uint, uint8, uint16, uint64 ) to uint32 in golang, use the <code class=\"language-text\">uint32()</code> method it will make any uint to uint32.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"reflect\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i <span class=\"token builtin\">uint</span> <span class=\"token operator\">=</span> <span class=\"token number\">1264</span>\n  <span class=\"token keyword\">var</span> i8 <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">126</span>\n  <span class=\"token keyword\">var</span> i16 <span class=\"token builtin\">uint16</span> <span class=\"token operator\">=</span> <span class=\"token number\">32766</span>\n  <span class=\"token keyword\">var</span> i64 <span class=\"token builtin\">uint64</span> <span class=\"token operator\">=</span> <span class=\"token number\">9223372036854775806</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint321 <span class=\"token operator\">:=</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint321<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint321<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint322 <span class=\"token operator\">:=</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint322<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint322<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint323 <span class=\"token operator\">:=</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint323<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint323<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// below conversion does not fit in uint8, I will recommend using uint for this</span>\n  uint324 <span class=\"token operator\">:=</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>i64<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint324<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint324<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted any uint to uint32 and printed it in the golang console. </p>\n<p>Some conversions will not fit in uint32, where you should use the <code class=\"language-text\">uint()</code> conversion.</p>\n<p>let’s check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Output:\n\n<span class=\"token number\">1264</span> uint\n<span class=\"token number\">126</span> uint8\n<span class=\"token number\">32766</span> uint16\n<span class=\"token number\">9223372036854775806</span> uint64\n<span class=\"token number\">1264</span> uint32\n<span class=\"token number\">126</span> uint32\n<span class=\"token number\">32766</span> uint32\n<span class=\"token number\">4294967294</span> uint32</code></pre></div>\n<iframe src=\"https://onecompiler.com/embed/go/3yjz4cs7r?hideLanguageSelection=true&hideNew=true&hideTitle=true\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" ></iframe>\n<h3>Convert to uint64 example</h3>\n<p>To any uint ( uint, uint8, uint16, uint32 ) to uint64 in golang, use the <code class=\"language-text\">uint64()</code> method it will make any uint to uint64.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"reflect\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i <span class=\"token builtin\">uint</span> <span class=\"token operator\">=</span> <span class=\"token number\">1264</span>\n  <span class=\"token keyword\">var</span> i8 <span class=\"token builtin\">uint8</span> <span class=\"token operator\">=</span> <span class=\"token number\">126</span>\n  <span class=\"token keyword\">var</span> i16 <span class=\"token builtin\">uint16</span> <span class=\"token operator\">=</span> <span class=\"token number\">32766</span>\n  <span class=\"token keyword\">var</span> i32 <span class=\"token builtin\">uint32</span> <span class=\"token operator\">=</span> <span class=\"token number\">2147483646</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint641 <span class=\"token operator\">:=</span> <span class=\"token function\">uint64</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint641<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint641<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint642 <span class=\"token operator\">:=</span> <span class=\"token function\">uint64</span><span class=\"token punctuation\">(</span>i8<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint642<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint642<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint643 <span class=\"token operator\">:=</span> <span class=\"token function\">uint64</span><span class=\"token punctuation\">(</span>i16<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint643<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint643<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  uint644 <span class=\"token operator\">:=</span> <span class=\"token function\">uint64</span><span class=\"token punctuation\">(</span>i32<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>uint644<span class=\"token punctuation\">,</span> reflect<span class=\"token punctuation\">.</span><span class=\"token function\">TypeOf</span><span class=\"token punctuation\">(</span>uint644<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted any uint to uint64 and printed it in the golang console. </p>\n<p>Some conversions will not fit in uint64, where you should use the <code class=\"language-text\">uint()</code> conversion.</p>\n<p>let’s check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Output:\n\n<span class=\"token number\">1264</span> uint\n<span class=\"token number\">126</span> uint8\n<span class=\"token number\">32766</span> uint16\n<span class=\"token number\">2147483646</span> uint32\n<span class=\"token number\">1264</span> uint64\n<span class=\"token number\">126</span> uint64\n<span class=\"token number\">32766</span> uint64\n<span class=\"token number\">2147483646</span> uint64</code></pre></div>\n<iframe src=\"https://onecompiler.com/embed/go/3yjz4fcq6?hideLanguageSelection=true&hideNew=true&hideTitle=true\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" ></iframe>\n<p>I hope it helps you, All the best 👍.</p>","frontmatter":{"title":"how to change uint size in golang?","tags":["GoLang"],"date":"October 15, 2022","description":"aGuideHub, Guide to changing the size of uint in golang - aGuideHub","social_image":"media/template/golang.jpg"}},"prev":{"frontmatter":{"title":"How to restore erased parts in Photopea?"},"fields":{"slug":"/blog/2022-10-16-how-to-restore-erased-parts-in-photopea/"}},"next":{"frontmatter":{"title":"how to change int size in golang?"},"fields":{"slug":"/blog/2022-10-15-golang-change-int-size/"}}},"pageContext":{"slug":"/blog/2022-10-15-golang-change-uint-size/","prevSlug":"/blog/2022-10-16-how-to-restore-erased-parts-in-photopea/","nextSlug":"/blog/2022-10-15-golang-change-int-size/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}