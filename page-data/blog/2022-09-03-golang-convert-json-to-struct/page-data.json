{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/2022-09-03-golang-convert-json-to-struct/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends üëã, Welcome To aGuideHub! ‚ù§Ô∏è To convert json to struct in golang, use , it will convert json string to struct. You have to only pass your json in‚Ä¶","html":"<p>Hi Friends üëã,</p>\n<p>Welcome To aGuideHub! ‚ù§Ô∏è</p>\n<p>To convert json to struct in golang, use <code class=\"language-text\">json.Unmarshal()</code>, it will convert json string to struct. You have to only pass your json in <code class=\"language-text\">json.Unmarshal()</code>.</p>\n<hr>\n<p>Follow the below tutorial if you are struggling with installing GO in windows.</p>\n<p><a href=\"https://aguidehub.com/blog/how-to-install-golang-in-windows\">https://aguidehub.com/blog/how-to-install-golang-in-windows</a></p>\n<hr>\n<p>Today, I will show you how do I convert a json string to struct in golang, as above mentioned I‚Äôm going to use <code class=\"language-text\">json.Unmarshal()</code> with <code class=\"language-text\">byte</code> method.</p>\n<p>Let‚Äôs start our <strong><em>Golang convert json to struct example</em></strong></p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n  \n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"encoding/json\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">type</span> Domain <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    Id        <span class=\"token builtin\">int</span>\n    Name      <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n  \n<span class=\"token comment\">// main function</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \n    <span class=\"token keyword\">var</span> domain Domain\n  \n    Data <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">`{\n        \"Id\": 1,  \n        \"Name\": \"Infinitbility\"\n    }`</span><span class=\"token punctuation\">)</span>\n  \n    err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>Data<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>domain<span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  \n    <span class=\"token comment\">// printing details of</span>\n    <span class=\"token comment\">// decoded data</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Struct is:\"</span><span class=\"token punctuation\">,</span> domain<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name is:\"</span><span class=\"token punctuation\">,</span> domain<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted the json value to a struct and printed in golang console. let‚Äôs check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Struct is: <span class=\"token punctuation\">{</span><span class=\"token number\">1</span> Infinitbility<span class=\"token punctuation\">}</span>\nName is: Infinitbility</code></pre></div>\n<p>I hope it helps you, All the best üëç.</p>\n<iframe src=\"https://onecompiler.com/embed/go/3yfbegufh?hideLanguageSelection=true&hideNew=true&hideTitle=true\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" ></iframe>","frontmatter":{"title":"how to convert json to struct in golang?","tags":["GoLang"],"date":"September 03, 2022","description":"aGuideHub, Guide to convert json to struct in golang - aGuideHub","social_image":"media/template/golang.jpg"}},"prev":{"frontmatter":{"title":"How to change layer name in photopea?"},"fields":{"slug":"/blog/2022-09-03-how-to-change-layer-name-in-photopea/"}},"next":{"frontmatter":{"title":"How to change line spacing in photopea?"},"fields":{"slug":"/blog/2022-09-03-how-to-change-line-spacing-in-photopea/"}}},"pageContext":{"slug":"/blog/2022-09-03-golang-convert-json-to-struct/","prevSlug":"/blog/2022-09-03-how-to-change-layer-name-in-photopea/","nextSlug":"/blog/2022-09-03-how-to-change-line-spacing-in-photopea/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}