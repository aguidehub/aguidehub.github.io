{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/how-to-print-error-in-golang/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends üëã, Welcome To aGuideHub! ‚ù§Ô∏è To print error in golang, you can use , , and  all three methods help you to print errors. See a short example to print‚Ä¶","html":"<p>Hi Friends üëã,</p>\n<p>Welcome To aGuideHub! ‚ù§Ô∏è</p>\n<p>To print error in golang, you can use <code class=\"language-text\">fmt.Println(err)</code>, <code class=\"language-text\">fmt.Println(fmt.Sprintf(\"Error: %s\", err))</code>, and <code class=\"language-text\">fmt.Printf(\"%+v\\n\", err)</code> all three methods help you to print errors.</p>\n<p>See a short example to print errors in golang.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">err <span class=\"token operator\">:=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"an error occurred\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In this article, I will show you three different methods to print errors in golang.</p>\n<ol>\n<li>Using the <code class=\"language-text\">fmt.Println(err)</code> method</li>\n<li>Using combination of <code class=\"language-text\">fmt.Println()</code> and <code class=\"language-text\">fmt.Sprintf()</code> method</li>\n<li>Using the <code class=\"language-text\">fmt.Printf()</code> method</li>\n</ol>\n<p>Let‚Äôs start the example of a print error using the <code class=\"language-text\">fmt.Println(err)</code> method</p>\n<h2>Using <code class=\"language-text\">fmt.Println(err)</code> method</h2>\n<p>This is the simplest way to print errors in golang, here I will use the <code class=\"language-text\">Println()</code> method from the <code class=\"language-text\">fmt</code> package.</p>\n<p>Here, we are also using the <code class=\"language-text\">\"errors\"</code> package to generate custom errors.</p>\n<p>let‚Äôs start the code.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"errors\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  err <span class=\"token operator\">:=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"an error occurred\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When I run the above code, the golang console shows `an error occurred in string datatype.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Output:\n\nan error occured</code></pre></div>\n<p>Here, we are provided code onecompiler links for the above program print error in golang. Then you can use it whenever you want and make the changes per your requirements.</p>\n<p>You can also use the below link to check the output of the above program.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3xyv9eqj3\" target=\"_BLANK\" rel=\"nofollow\">Try it Yourself</a></p>\n<h2>Using combination of <code class=\"language-text\">fmt.Println()</code> and <code class=\"language-text\">fmt.Sprintf()</code> method</h2>\n<p>This method helps you when you want to print an error with additional information in the below example I‚Äôm printing an error with <code class=\"language-text\">Error:</code> text.</p>\n<p>So it will help you identify you‚Äôre you are getting errors.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    err <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something went wrong\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: %s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When you run the above program, You will get output like the below console.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Output:\n\nError: something went wrong</code></pre></div>\n<p>Here, we are provided code onecompiler links for the above program print error with additional information in golang. Then you can use it whenever you want and make the changes per your requirements.</p>\n<p>You can also use the below link to check the output of the above program.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3z3peg7fu\" target=\"_BLANK\" rel=\"nofollow\">Try it Yourself</a></p>\n<h2>Using <code class=\"language-text\">fmt.Printf()</code>method</h2>\n<p>This method helps you to print error with their stack trace that‚Äôs how you will able to know exactly where you are getting error.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"github.com/pkg/errors\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    err <span class=\"token operator\">:=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something went wrong\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%+v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When you run the above program, You will get output like the below console.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Output:\n\nHelloWorld.go:5:5: cannot <span class=\"token function\">find</span> package <span class=\"token string\">\"github.com/pkg/errors\"</span> <span class=\"token keyword\">in</span> any of:\n  /usr/lib/go-1.13/src/github.com/pkg/errors <span class=\"token punctuation\">(</span>from <span class=\"token variable\">$GOROOT</span><span class=\"token punctuation\">)</span>\n  /root/go/src/github.com/pkg/errors <span class=\"token punctuation\">(</span>from <span class=\"token variable\">$GOPATH</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here, we are provided code onecompiler links for the above program print error with a stack trace in golang. Then you can use it whenever you want and make the changes per your requirements.</p>\n<p>You can also use the below link to check the output of the above program.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3z3pevntg\" target=\"_BLANK\" rel=\"nofollow\">Try it Yourself</a></p>\n<p>All the best üëç</p>","frontmatter":{"title":"How to print error in golang?","tags":["GoLang"],"date":"April 12, 2022","description":"Example of print error value in golang with step-by-step tutorial - aGuideHub","social_image":"media/template/golang.jpg"}},"prev":{"frontmatter":{"title":"How to add circular text in photoshop?"},"fields":{"slug":"/blog/how-to-add-circular-text-in-photoshop/"}},"next":{"frontmatter":{"title":"How to add new page in photoshop?"},"fields":{"slug":"/blog/how-to-add-new-page-in-photoshop/"}}},"pageContext":{"slug":"/blog/how-to-print-error-in-golang/","prevSlug":"/blog/how-to-add-circular-text-in-photoshop/","nextSlug":"/blog/how-to-add-new-page-in-photoshop/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}