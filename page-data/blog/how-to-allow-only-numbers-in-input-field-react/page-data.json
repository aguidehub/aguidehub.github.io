{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/how-to-allow-only-numbers-in-input-field-react/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends üëã, Welcome To aGuideHub! ‚ù§Ô∏è To allow only numbers in the input field in react js, you can use the input  attribute with  number regex to the only‚Ä¶","html":"<p>Hi Friends üëã,</p>\n<p>Welcome To aGuideHub! ‚ù§Ô∏è</p>\n<p>To allow only numbers in the input field in react js, you can use the input <code class=\"language-text\">pattern</code> attribute with <code class=\"language-text\">[0-9]*</code> number regex to the only numeric value in react input.</p>\n<p>See a short example of using the <code class=\"language-text\">pattern</code> attribute with <code class=\"language-text\">[0-9]*</code> number regex to restrict the user to enter only digits.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>input\n  type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span>\n  pattern<span class=\"token operator\">=</span><span class=\"token string\">\"[0-9]*\"</span>\n  value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">}</span>\n  onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token function\">setVal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>validity<span class=\"token punctuation\">.</span>valid <span class=\"token operator\">?</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token operator\">:</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>Today, I am going to show you. two ways to allow a user to enter numbers only in react input field.</p>\n<ol>\n<li>Input field allows only numbers using the pattern attribute</li>\n<li>Input field allows only numbers using regex in the onChange function</li>\n</ol>\n<p>Let‚Äôs start today‚Äôs tutorial <strong><em>only accept numbers in input react</em></strong></p>\n<h2>Input field allows only numbers using the <code class=\"language-text\">pattern</code> attribute</h2>\n<p>In this example, I will do the following things to only allow numbers in input to react using a pattern.</p>\n<ul>\n<li>Create a state with empty state value <code class=\"language-text\">useState(\"\")</code>.</li>\n<li>Put <code class=\"language-text\">[0-9]*</code> regex in react input pattern attribute</li>\n<li>Validate value in <code class=\"language-text\">onChange</code> attribute before setting value in the state</li>\n</ul>\n<p><code class=\"language-text\">App.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">,</span> setVal<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input\n        type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span>\n        pattern<span class=\"token operator\">=</span><span class=\"token string\">\"[0-9]*\"</span>\n        value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">}</span>\n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n          <span class=\"token function\">setVal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>validity<span class=\"token punctuation\">.</span>valid <span class=\"token operator\">?</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token operator\">:</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here, we are provided code sandbox links for the above program for the example react allows only numbers in input. Then you can use it whenever you went and do the changes as per your requirements.</p>\n<p><a href=\"https://aguidehub.com/codesandbox/?code=billowing-waterfall-3mkpib\" rel=\"nofollow\" target=\"_blank\">Try It Yourself</a></p>\n<h2>Input field allow only numbers using regex in onChange function</h2>\n<p>In this example, I will do the following things to only allow numbers in input to react using regex in the onchange function.</p>\n<ul>\n<li>Create a state with empty state value <code class=\"language-text\">useState(\"\")</code>.</li>\n<li>Create a <code class=\"language-text\">handleChange</code> function and validate value is a number or not before storing it in the state.</li>\n<li>Call the <code class=\"language-text\">handleChange</code> function from react input <code class=\"language-text\">onChange</code> attribute.</li>\n</ul>\n<p><code class=\"language-text\">App.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>val<span class=\"token punctuation\">,</span> setVal<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> regex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[0-9\\b]+$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> regex<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setVal</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Age\"</span>\n        type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span>\n        value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">}</span>\n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here, we are provided code sandbox links for the above program for the example react input only number using regex. Then you can use it whenever you went and do the changes as per your requirements.</p>\n<p><a href=\"https://aguidehub.com/codesandbox/?code=quirky-ellis-8olfq4\" rel=\"nofollow\" target=\"_blank\">Try It Yourself</a></p>\n<p>All the best üëç</p>","frontmatter":{"title":"How to allow only numbers in input field React?","tags":["React"],"date":"May 26, 2022","description":"Example of allowing only numbers in the input field in React with step-by-step tutorial - aGuideHub","social_image":"media/template/reactjs.jpg"}},"prev":{"frontmatter":{"title":"How to remove the last character of a string in Golang?"},"fields":{"slug":"/blog/how-to-remove-the-last-character-of-a-string-in-golang/"}},"next":{"frontmatter":{"title":"How to clear input field value on button click in react?"},"fields":{"slug":"/blog/how-to-clear-input-field-value-on-button-click-in-react/"}}},"pageContext":{"slug":"/blog/how-to-allow-only-numbers-in-input-field-react/","prevSlug":"/blog/how-to-remove-the-last-character-of-a-string-in-golang/","nextSlug":"/blog/how-to-clear-input-field-value-on-button-click-in-react/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}