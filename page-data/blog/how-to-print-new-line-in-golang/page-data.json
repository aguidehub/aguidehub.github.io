{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/how-to-print-new-line-in-golang/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends üëã, Welcome To aGuideHub! ‚ù§Ô∏è To print a string in a new line in go, you can put  between the text where you want to start a new line and use the‚Ä¶","html":"<p>Hi Friends üëã,</p>\n<p>Welcome To aGuideHub! ‚ù§Ô∏è</p>\n<p>To print a string in a new line in go, you can put <code class=\"language-text\">\\n</code> between the text where you want to start a new line and use the <code class=\"language-text\">fmt.Printf()</code> method it will show your text in a new line in the console.</p>\n<p>See a short example to use <code class=\"language-text\">\\n</code> with the <code class=\"language-text\">fmt.Printf()</code> method.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\nWorld\\n\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>In this article, you will get four ways to print new lines in golang.</p>\n<ol>\n<li>Using the <code class=\"language-text\">fmt.Printf()</code> method</li>\n<li>Using the <code class=\"language-text\">fmt.Println()</code> method</li>\n<li>Using the <code class=\"language-text\">fmt.Sprintf()</code> method</li>\n<li>Using the <code class=\"language-text\">strings.Join()</code> method</li>\n</ol>\n<p>In all the above methods I will use <code class=\"language-text\">\\n</code> to show the string in the next line above methods help you to print text in different use cases.</p>\n<p>Let‚Äôs start with the <code class=\"language-text\">fmt.Printf()</code> method.</p>\n<h2>Using <code class=\"language-text\">fmt.Printf()</code> method</h2>\n<p>The <code class=\"language-text\">fmt</code> package is part of the golang standard library and it provides a lot of options to print statements but here, in this example, you are going to see the example <code class=\"language-text\">fmt.Printf()</code> with <code class=\"language-text\">\\n</code>.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\nWorld\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, I used <code class=\"language-text\">\\n</code> between <code class=\"language-text\">Hello World</code> text to print the world in the next line.</p>\n<p><code class=\"language-text\">OUTPUT</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Output:\n\nHello\nWorld</code></pre></div>\n<p>Using the below link, you will able to edit the above code and customize it as per your requirement.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3yzjjqmh7\" target=\"_BLANK\">Try it yourself</a></p>\n<h2>Using <code class=\"language-text\">fmt.Println()</code> method</h2>\n<p>The <code class=\"language-text\">fmt</code> package provides one more option to print and that is the <code class=\"language-text\">fmt.Println()</code> method, in this example, you are going to see an example of <code class=\"language-text\">fmt.Println()</code> with <code class=\"language-text\">\\n</code>.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\nWorld\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, I used <code class=\"language-text\">\\n</code> between <code class=\"language-text\">Hello World</code> text to print the world in the next line using the <code class=\"language-text\">Println()</code> method.</p>\n<p><code class=\"language-text\">OUTPUT</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Output:\n\nHello\nWorld</code></pre></div>\n<p>Using the below link, you will able to edit the above code and customize as per your requirement.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3yzjkts33\" target=\"_BLANK\">Try it yourself</a></p>\n<h2>Using <code class=\"language-text\">fmt.Sprintf()</code> method</h2>\n<p>The <code class=\"language-text\">fmt</code> package provides the <code class=\"language-text\">Sprintf()</code> method also but it will not help you to print statements into the console, so now you are thinking why it‚Äôs here then.</p>\n<p>it‚Äôs because the <code class=\"language-text\">Sprintf()</code> method helps you to manipulate your string and return it, here I will not go deep, I will just how to use the <code class=\"language-text\">fmt.Sprintf()</code> method with <code class=\"language-text\">\\n</code> and print it in the console.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    message <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\nWorld\\n\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The output will remain the same because at the end we are adding <code class=\"language-text\">\\n</code> in the same text and in the same place.</p>\n<p><code class=\"language-text\">OUTPUT</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Output:\n\nHello\nWorld</code></pre></div>\n<p>Using the below link, you will able to edit the above code and customize as per your requirement.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3yzjm9pak\" target=\"_BLANK\">Try it yourself</a></p>\n<h2>Using <code class=\"language-text\">strings.Join()</code> method</h2>\n<p>You can use the <code class=\"language-text\">strings.Join()</code> method when you have a map ( array ) of string and you want to print each string in a new line.</p>\n<p>The <code class=\"language-text\">strings.Join()</code> method basically help you to concatenate map string with your desired separator but here, I will use <code class=\"language-text\">\\n</code> as a separator.</p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strings\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    message <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">}</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The output will remain the same because at the end we are adding <code class=\"language-text\">\\n</code> in the same text and in the same place.</p>\n<p><code class=\"language-text\">OUTPUT</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Output:\n\nHello\nWorld</code></pre></div>\n<p>Using the below link, you will able to edit the above code and customize it as per your requirement.</p>\n<p><a href=\"https://aguidehub.com/onecompiler/?language=go&code=3yzjmex7k\" target=\"_BLANK\">Try it yourself</a></p>\n<p>All the best üëç</p>","frontmatter":{"title":"How to print new line in golang?","tags":["GoLang"],"date":"April 26, 2022","description":"Example of printing new line in golang with step-by-step tutorial - aGuideHub","social_image":"media/template/golang.jpg"}},"prev":{"frontmatter":{"title":"How to use accordion in bootstrap?"},"fields":{"slug":"/blog/how-to-use-accordion-in-bootstrap/"}},"next":{"frontmatter":{"title":"How to use offset in bootstrap 3?"},"fields":{"slug":"/blog/how-to-use-offset-in-bootstrap-3/"}}},"pageContext":{"slug":"/blog/how-to-print-new-line-in-golang/","prevSlug":"/blog/how-to-use-accordion-in-bootstrap/","nextSlug":"/blog/how-to-use-offset-in-bootstrap-3/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}