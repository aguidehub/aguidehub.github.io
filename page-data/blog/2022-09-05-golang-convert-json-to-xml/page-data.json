{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/2022-09-05-golang-convert-json-to-xml/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends üëã, Welcome To aGuideHub! ‚ù§Ô∏è To convert json to xml in golang, use  method, it will convert json to xml. You have to only pass your json in  method‚Ä¶","html":"<p>Hi Friends üëã,</p>\n<p>Welcome To aGuideHub! ‚ù§Ô∏è</p>\n<p>To convert json to xml in golang, use <code class=\"language-text\">xml.MarshalIndent()</code> method, it will convert json to xml. You have to only pass your json in <code class=\"language-text\">xml.MarshalIndent()</code> method.</p>\n<hr>\n<p>Follow the below tutorial if you are struggling with installing GO in windows.</p>\n<p><a href=\"https://aguidehub.com/blog/how-to-install-golang-in-windows\">https://aguidehub.com/blog/how-to-install-golang-in-windows</a></p>\n<hr>\n<p>Today, I will show you how do I convert a json to xml in golang, as above mentioned I‚Äôm going to use <code class=\"language-text\">xml.MarshalIndent()</code> method.</p>\n<p>To use the <code class=\"language-text\">xml.MarshalIndent()</code> method, we have first import <code class=\"language-text\">\"encoding/xml\"</code> package, then we have to create json variable which we will use to convert it in xml.</p>\n<p>Let‚Äôs start our <strong><em>Golang convert json to xml example</em></strong></p>\n<p><code class=\"language-text\">main.go</code></p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"encoding/xml\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">type</span> Product <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    ID    <span class=\"token builtin\">uint64</span>\n    Name  <span class=\"token builtin\">string</span>\n    SKU   <span class=\"token builtin\">string</span>\n    Cat   Category\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> Category <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    ID   <span class=\"token builtin\">uint64</span>\n    Name <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    p <span class=\"token operator\">:=</span> Product<span class=\"token punctuation\">{</span>ID<span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tea Pot\"</span><span class=\"token punctuation\">,</span> SKU<span class=\"token punctuation\">:</span> <span class=\"token string\">\"TP12\"</span><span class=\"token punctuation\">,</span> Cat<span class=\"token punctuation\">:</span> Category<span class=\"token punctuation\">{</span>ID<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tea\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    bI<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> xml<span class=\"token punctuation\">.</span><span class=\"token function\">MarshalIndent</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    xmlWithHeader <span class=\"token operator\">:=</span> xml<span class=\"token punctuation\">.</span>Header <span class=\"token operator\">+</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>bI<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>xmlWithHeader<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above example, we have converted the json value to a xml and printed in golang console. let‚Äôs check the output.</p>\n<h4>Output</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span>?<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Product<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/ID<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>Name<span class=\"token operator\">></span>Tea Pot<span class=\"token operator\">&lt;</span>/Name<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>SKU<span class=\"token operator\">></span>TP1<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/SKU<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>Cat<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ID<span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/ID<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Name<span class=\"token operator\">></span>Tea<span class=\"token operator\">&lt;</span>/Name<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>/Cat<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/Product<span class=\"token operator\">></span></code></pre></div>\n<p>I hope it helps you, All the best üëç.</p>\n<p><a href=\"https://onecompiler.com/go/3yfkwp8mt\" target=\"_BLANK\" rel=\"nofollow\">Try it Yourself</a></p>","frontmatter":{"title":"how to convert json to xml in golang?","tags":["GoLang"],"date":"September 05, 2022","description":"aGuideHub, Guide to convert json to xml in golang - aGuideHub","social_image":"media/template/golang.jpg"}},"prev":{"frontmatter":{"title":"how to convert map to struct in golang?"},"fields":{"slug":"/blog/2022-09-06-golang-convert-map-to-struct/"}},"next":{"frontmatter":{"title":"how to convert json to map in golang?"},"fields":{"slug":"/blog/2022-09-04-golang-convert-json-to-map/"}}},"pageContext":{"slug":"/blog/2022-09-05-golang-convert-json-to-xml/","prevSlug":"/blog/2022-09-06-golang-convert-map-to-struct/","nextSlug":"/blog/2022-09-04-golang-convert-json-to-map/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}