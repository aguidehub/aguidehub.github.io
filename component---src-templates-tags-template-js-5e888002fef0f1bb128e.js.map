{"version":3,"file":"component---src-templates-tags-template-js-5e888002fef0f1bb128e.js","mappings":"0KA2BA,IAtBiB,YAAgB,IACzBA,EADwB,EAAZC,MACKC,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClDC,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,KAAMC,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,YACnBC,EAASP,EAATO,KAER,OACE,gBAACC,EAAD,CACEC,IAAKF,EACLH,KAAMA,EACND,MAAOA,EACPE,KAAMA,EACNE,KAAMA,EACNL,WAAYA,EACZI,YAAaA,EACbL,QAASA,OAKf,OAAO,gBAACS,EAAD,KAAiBd,IAK1B,IAAMY,EAAe,SAAC,GAQf,IAPLL,EAOI,EAPJA,MACAE,EAMI,EANJA,KACAH,EAKI,EALJA,WACAE,EAII,EAJJA,KACAH,EAGI,EAHJA,QACAK,EAEI,EAFJA,YACAC,EACI,EADJA,KAEA,OACE,gBAACI,EAAD,KACE,gBAAC,IAAD,CAAMP,KAAMA,IAEZ,gBAACQ,EAAD,KACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIP,GAAOJ,IAEnB,gBAACY,EAAD,CACEC,wBAAyB,CACvBC,OAAQX,GAAeL,KAG3B,gBAACiB,EAAD,KACE,4BAAOb,GAEP,4BAAOH,EAAP,YAMFQ,EAAiBS,EAAAA,QAAAA,GAAAA,WAAH,oEAAGA,CAAH,yMAedR,EAAqBQ,EAAAA,QAAAA,GAAAA,WAAH,wEAAGA,CAAH,wTAqBlBP,EAAgBO,EAAAA,QAAAA,GAAAA,WAAH,mEAAGA,CAAH,4OAuBbJ,EAAkBI,EAAAA,QAAAA,EAAAA,WAAH,qEAAGA,CAAH,gDAKfD,EAAeC,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,4F,mCCxHZC,GAAaD,E,KAAAA,SAAON,EAAAA,MAAV,8EAAGM,CAAH,4OAahB,O,oDCUA,IAfa,SAAC,GAAc,IAAZf,EAAW,EAAXA,KACd,OACE,2BACGA,GACCA,EAAKN,KAAI,SAACuB,GACR,OACE,gBAACC,EAAD,CAAKb,IAAKY,GACR,gBAAC,EAAAR,KAAD,CAAMC,GAAE,UAdDS,EAcwBF,EAbpCE,EACJC,MAAM,sEACN1B,KAAI,SAAC2B,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAU4CN,IAdlC,IAACE,OAwBrB,IAAMD,EAAMH,EAAAA,QAAAA,KAAAA,WAAH,qDAAGA,CAAH,6U,yFCkBT,UAvCqB,SAAC,GAA2B,IAAzBS,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC3BR,EAAQO,EAARP,IACAS,EAAeD,EAAKE,kBAApBD,WACFjC,EAAQgC,EAAKE,kBAAkBC,MAC/B7B,EAAK,gBAAmBkB,EAE9B,OACE,gBAAC,IAAD,CAAQlB,MAAOA,GACb,gBAAC8B,EAAD,KACE,gBAACC,EAAD,KACGJ,EADH,kBAC8BT,EAD9B,KAGA,mBAOEP,GAAG,SAPL,iBAWA,gBAAC,IAAD,CAAUjB,MAAOA,IAEjB,mBAKEiB,GAAG,SALL,oBAgBR,IAAMmB,EAAsBd,EAAAA,QAAAA,IAAAA,WAAH,8EAAGA,CAAH,kCAInBe,EAAQf,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,gCAIJ","sources":["webpack://gatsby-starter-glass/./src/components/post-list.js","webpack://gatsby-starter-glass/./src/components/styled-link.js","webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/tags-template.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\nimport Tags from './tags';\r\n\r\nconst PostList = ({ posts }) => {\r\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\r\n    const { title, tags, date, description } = frontmatter;\r\n    const { slug } = fields;\r\n\r\n    return (\r\n      <PostListItem\r\n        key={slug}\r\n        tags={tags}\r\n        title={title}\r\n        date={date}\r\n        slug={slug}\r\n        timeToRead={timeToRead}\r\n        description={description}\r\n        excerpt={excerpt}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <StyledPostList>{PostList}</StyledPostList>;\r\n};\r\n\r\nexport default PostList;\r\n\r\nconst PostListItem = ({\r\n  title,\r\n  date,\r\n  timeToRead,\r\n  tags,\r\n  excerpt,\r\n  description,\r\n  slug,\r\n}) => {\r\n  return (\r\n    <StyledPostListItem>\r\n      <Tags tags={tags} />\r\n\r\n      <PostListTitle>\r\n        <Link to={slug}>{title}</Link>\r\n      </PostListTitle>\r\n      <PostListExcerpt\r\n        dangerouslySetInnerHTML={{\r\n          __html: description || excerpt,\r\n        }}\r\n      />\r\n      <PostListMeta>\r\n        <span>{date}</span>\r\n\r\n        <span>{timeToRead} mins</span>\r\n      </PostListMeta>\r\n    </StyledPostListItem>\r\n  );\r\n};\r\n\r\nconst StyledPostList = styled.ul`\r\n  padding: 0;\r\n  list-style: none;\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: var(--size-600);\r\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\r\n\r\n  @media screen and (max-width: 500px) {\r\n    & {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledPostListItem = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 8px;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    & {\r\n      margin-top: var(--size-600);\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostListTitle = styled.h2`\r\n  line-height: 1.2;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  text-transform: capitalize;\r\n  font-size: var(--size-600);\r\n  font-weight: 700;\r\n\r\n  & a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  & a::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst PostListExcerpt = styled.p`\r\n  margin-top: auto;\r\n  font-size: var(--size-400);\r\n`;\r\n\r\nconst PostListMeta = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  font-size: var(--size-300);\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled(Link)`\r\n  padding: 0.5rem;\r\n  padding-left: 1.5rem;\r\n  padding-right: 1.5rem;\r\n  color: inherit;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n  text-decoration: none;\r\n  border-radius: 0px;\r\n  border: 1px solid rgba(255, 255, 255, 0.8);\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport default StyledLink;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\n\r\nconst toKebabCase = (str) => {\r\n  return str\r\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    .map((x) => x.toLowerCase())\r\n    .join('-');\r\n};\r\n\r\nconst Tags = ({ tags }) => {\r\n  return (\r\n    <div>\r\n      {tags &&\r\n        tags.map((tag) => {\r\n          return (\r\n            <Tag key={tag}>\r\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\r\n            </Tag>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nconst Tag = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    z-index: 2;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(255, 255, 255, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport PostList from '../components/post-list';\r\nimport StyledLink from '../components/styled-link';\r\nimport styled from 'styled-components';\r\n\r\nconst TagsTemplate = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { totalCount } = data.allMarkdownRemark;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n  const title = `Posts tagged ${tag}`;\r\n\r\n  return (\r\n    <Layout title={title}>\r\n      <TagsTemplateWrapper>\r\n        <Title>\r\n          {totalCount} posts tagged \"{tag}\"\r\n        </Title>\r\n        <Link\r\n          css={`\r\n            margin-top: var(--size-400);\r\n            display: inline-block;\r\n            color: inherit;\r\n            text-transform: uppercase;\r\n          `}\r\n          to=\"/tags\"\r\n        >\r\n          view all tags\r\n        </Link>\r\n        <PostList posts={posts} />\r\n\r\n        <StyledLink\r\n          css={`\r\n            margin-top: var(--size-400);\r\n            display: inline-block;\r\n          `}\r\n          to=\"/tags\"\r\n        >\r\n          View All tags\r\n        </StyledLink>\r\n      </TagsTemplateWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TagsTemplate;\r\n\r\nconst TagsTemplateWrapper = styled.div`\r\n  padding-top: var(--size-900);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: var(--size-700);\r\n`;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {\r\n        frontmatter: { tags: { in: [$tag] } }\r\n        fields: { contentType: { eq: \"posts\" } }\r\n      }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          description\r\n          tags\r\n          title\r\n        }\r\n        timeToRead\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["PostList","posts","map","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","PostListItem","key","StyledPostList","StyledPostListItem","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","StyledLink","tag","Tag","str","match","x","toLowerCase","join","pageContext","data","totalCount","allMarkdownRemark","nodes","TagsTemplateWrapper","Title"],"sourceRoot":""}